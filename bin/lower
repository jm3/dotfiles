#!/usr/bin/env ruby

require 'fileutils'

# since os x and windows are case-preserving but not case
# sensitive, we need to use an intermediate temp file to complete
# the move successfully, otherwise the OS reports to ruby that
# "FOO" and "foo" are the same file

class String
  def titlecase
    lowercase_words = %w(an and at for in of on the vs w with)
    self.split(/ /).collect { |word| lowercase_words.include?(word.downcase) ? word.downcase : word.capitalize }.join(" ")
  end
end

case File.basename($0)
when "lower"
  method = "downcase"
when "upper"
  method = "upcase"
when "title"
  method = "titlecase"
else
  puts "called in some weird way; call with upcase or lcase"
end

ARGV.each do |f|
  if File.file?(f)
    puts "moving #{f} to #{f.send(method)}"

    temp_slug = (rand*10000).to_i
    FileUtils.mv f, "#{f.send(method)}.#{temp_slug}"
    FileUtils.mv "#{f.send(method)}.#{temp_slug}", f.send(method)
  end
end

